<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
<!--    <packaging>pom</packaging>-->
    <!--<parent>-->
        <!--<groupId>com.my</groupId>-->
        <!--<artifactId>testio</artifactId>-->
        <!--<version>1.0</version>-->
    <!--</parent>-->

    <groupId>com.my.testio</groupId>
    <artifactId>DesignModeTest</artifactId>
    <version>1.0</version>
    <modules>
        <module>spring-boot-starter-helloworld</module>
    </modules>
<!--  这行配置会导致  SpringBoot的application.yml没有生效-->
    <packaging>pom</packaging>

    <name>DesignModeTest</name>
    <description>DesignModeTest server project for Spring Boot</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!--<version.spring>3.2.9.RELEASE</version.spring>-->
        <java.version>1.8</java.version>
        <spring-cloud-task.version>1.2.0.RELEASE</spring-cloud-task.version>
        <spring-cloud.version>Dalston.SR1</spring-cloud.version>
        <version.apache.commons>3.4</version.apache.commons>
        <spring.boot.version>1.5.4.RELEASE</spring.boot.version>
        <spring.cloud.version>1.3.5.RELEASE</spring.cloud.version>
        <lombok.version>1.16.16</lombok.version>
    </properties>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.springframework/spring-context-support -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>4.3.9.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-dependencies</artifactId>
            <version>1.5.4.RELEASE</version>
<!--            <type>pom</type>-->
<!--            <scope>import</scope>-->
        </dependency>

        <dependency>
            <groupId>org.openjdk.jol</groupId>
            <artifactId>jol-core</artifactId>
            <version>0.9</version>
        </dependency>

        <!--rabbitMQ相关配置-->
        <!--<dependency>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-starter-amqp</artifactId>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.springframework.cloud</groupId>-->
        <!--<artifactId>spring-cloud-starter-bus-amqp</artifactId>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-starter-cloud-connectors</artifactId>-->
        <!--</dependency>-->

        <!--<dependency>-->
        <!--<groupId>org.springframework.cloud</groupId>-->
        <!--<artifactId>spring-cloud-starter-oauth2</artifactId>-->
        <!--</dependency>-->

        <!--dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-security</artifactId>
        </dependency-->

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter</artifactId>
            <version>${spring.cloud.version}</version>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>org.springframework.cloud</groupId>-->
        <!--<artifactId>spring-cloud-starter-stream-rabbit</artifactId>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.mybatis.spring.boot</groupId>-->
        <!--<artifactId>mybatis-spring-boot-starter</artifactId>-->
        <!--<version>1.3.0</version>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>
        <!--这个模版的页面路径在spring.mvc.view.prefix=classpath:/templates/ 跟默认的定位页面的目录到static/下不一样-->
        <!--<dependency>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-starter-thymeleaf</artifactId>-->
        <!--<version>${spring.boot.version}</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-starter-actuator</artifactId>-->
        <!--<version>${spring.boot.version}</version>-->
        <!--</dependency>-->

        <!--<dependency> 暂时除去，存在冲突，无法获取表名称
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <version>${spring.boot.version}</version>
        </dependency>

        <!--<dependency>-->
        <!--<groupId>org.mybatis</groupId>-->
        <!--<artifactId>mybatis-spring</artifactId>-->
        <!--<version>1.2.2</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.mybatis</groupId>-->
        <!--<artifactId>mybatis</artifactId>-->
        <!--<version>3.2.8</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
        <!--<groupId>org.apache.tomcat</groupId>-->
        <!--<artifactId>tomcat-jdbc</artifactId>-->
        <!--</dependency>-->

        <!--<dependency>-->
        <!--<groupId>com.h2database</groupId>-->
        <!--<artifactId>h2</artifactId>-->
        <!--<scope>runtime</scope>-->
        <!--</dependency>-->

        <!--<dependency>-->
        <!--<groupId>mysql</groupId>-->
        <!--<artifactId>mysql-connector-java</artifactId>-->
        <!--</dependency>-->

        <!---->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.16</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.belerweb/pinyin4j -->
        <dependency>
            <groupId>com.belerweb</groupId>
            <artifactId>pinyin4j</artifactId>
            <version>2.5.1</version>
        </dependency>

        <!--常用工具类比如StringUtils-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${version.apache.commons}</version>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2.2</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>22.0</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>1.0.24</version>
        </dependency>

        <!--<dependency>-->
        <!--<groupId>org.yaml</groupId>-->
        <!--<artifactId>snakeyaml</artifactId>-->
        <!--</dependency>-->
        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-csv -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.4</version>
        </dependency>
        <!--使用@Data注解相关快速构建get,set-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.25</version>
<!--            <type>jar</type>-->
        </dependency>

        <!--Spring Boot应用远程关闭-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>

        <!--测试我们自己的spring-boot-starter-->
        <dependency>
            <groupId>com.my</groupId>
            <artifactId>spring-boot-starter-helloworld</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty</artifactId>
            <version>3.9.9.Final</version>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.3.0</version>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-task-dependencies</artifactId>
                <version>${spring-cloud-task.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- ProGuard混淆插件-->
            <!--<plugin>-->
                <!--<groupId>com.github.wvengen</groupId>-->
                <!--<artifactId>proguard-maven-plugin</artifactId>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--<goal>proguard</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
                <!--<configuration>-->
                    <!--<proguardVersion>5.3.3</proguardVersion>-->
                    <!--<injar>${project.build.finalName}.jar</injar>-->
                    <!--<outjar>${project.build.finalName}.jar</outjar>-->
                    <!--&lt;!&ndash; 是否混淆&ndash;&gt;-->
                    <!--<obfuscate>true</obfuscate>-->
                    <!--<options>-->
                        <!--&lt;!&ndash; JDK目标版本1.7&ndash;&gt;-->
                        <!--<option>-target 1.8</option>-->
                        <!--&lt;!&ndash; 不做收缩（删除注释、未被引用代码）&ndash;&gt;-->
                        <!--<option>-dontshrink</option>-->
                        <!--&lt;!&ndash; 不做优化（变更代码实现逻辑）&ndash;&gt;-->
                        <!--<option>-dontoptimize</option>-->
                        <!--&lt;!&ndash; 不路过非公用类文件及成员&ndash;&gt;-->
                        <!--<option>-dontskipnonpubliclibraryclasses</option>-->
                        <!--<option>-dontskipnonpubliclibraryclassmembers</option>-->
                        <!--&lt;!&ndash; 优化时允许访问并修改有修饰符的类和类的成员 &ndash;&gt;-->
                        <!--<option>-allowaccessmodification</option>-->
                        <!--&lt;!&ndash; 确定统一的混淆类的成员名称来增加混淆&ndash;&gt;-->
                        <!--<option>-useuniqueclassmembernames</option>-->
                        <!--&lt;!&ndash; 不混淆所有包名，本人测试混淆后WEB项目问题实在太多，毕竟Spring配置中有大量固定写法的包名&ndash;&gt;-->
                        <!--<option>-keeppackagenames</option>-->
                        <!--&lt;!&ndash; 不混淆所有特殊的类&ndash;&gt;-->
                        <!--<option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod</option>-->
                        <!--&lt;!&ndash; 不混淆所有的set/get方法，毕竟项目中使用的部分第三方框架（例如Shiro）会用到大量的set/get映射&ndash;&gt;-->
                        <!--<option>-keepclassmembers public class * {void set*(***);*** get*();}</option>-->
                        <!--<option>-keepclassmembers class * {-->
                            <!--@org.springframework.beans.factory.annotation.Autowired *;-->
                            <!--@org.springframework.beans.factory.annotation.Value *;-->
                            <!--}-->
                        <!--</option>-->
                        <!--<option>-keep interface * extends * { *; }</option>-->
                        <!--<option>-keepnames interface **</option>-->
                        <!--<option>-adaptclassstrings</option>-->
                        <!--&lt;!&ndash; 不混淆model包中的所有类以及类的属性及方法，实体包，混淆了会导致ORM框架及前端无法识别&ndash;&gt;-->
                        <!--<option>-keep class cn.chay.**.bean.* { *;}</option>-->
                        <!--<option>-keep class cn.chay.base.model.message.* { *; }</option>-->
                        <!--<option>-keep class cn.chay.**.service.** </option>-->
                        <!--<option>-keep class cn.chay.**.mapper.*</option>-->
                        <!--<option>-keep class cn.mcn.chay.Applicationtion</option>-->
                        <!--<option>-keep class cn.chay.ApplicationStartup</option>-->
                        <!--<option>-keep class cn.chay.service.tcpser.elevator.* { *; }</option>-->
                        <!--<option>-keep class cn.chay.base.config.RabbitMQConfig { *;}</option>-->
                        <!--<option>-keep class cn.chay.consumer.mission.MissionConsumer {*;} </option>-->
                        <!--&lt;!&ndash; 以下因为大部分是Spring管理的Bean，不对包类的类名进行混淆，但对类中的属性和方法混淆&ndash;&gt;-->
                        <!--<option>-keep public class cn.chay.**.controller.** </option>-->
                        <!--<option>-keep public class cn.chay.base.** </option>-->
                        <!--<option>-keep public class cn.chay.service.consumer.topic.*</option>-->
                        <!--<option>-keep public class cn.chay.service.missiontask.*</option>-->
                        <!--<option>-keep public class cn.mcn.utilutil.**</option>-->
                        <!--<option>-keep public class cn.chay.log.base.LogInfoUtils </option>-->
                    <!--</options>-->
                    <!--&lt;!&ndash; 添加依赖，这里你可以按你的需要修改，这里测试只需要一个JRE的Runtime包就行了 &ndash;&gt;-->
                    <!--<libs>-->
                        <!--&lt;!&ndash; Include main JAVA library required.&ndash;&gt;-->
                        <!--<lib>${java.home}/lib/rt.jar</lib>-->
                        <!--&lt;!&ndash; Include crypto JAVA library if necessary.&ndash;&gt;-->
                        <!--<lib>${java.home}/lib/jce.jar</lib>-->
                    <!--</libs>-->
                    <!--&lt;!&ndash; 加载文件的过滤器，就是你的工程目录了&ndash;&gt;-->
                    <!--&lt;!&ndash;<inFilter>cn/chay/**</inFilter>&ndash;&gt;-->
                <!--</configuration>-->
                <!--<dependencies>-->
                    <!--<dependency>-->
                        <!--<groupId>net.sf.proguard</groupId>-->
                        <!--<artifactId>proguard-base</artifactId>-->
                        <!--<version>5.3.3</version>-->
                    <!--</dependency>-->
                <!--</dependencies>-->
            <!--</plugin>-->

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>1.5.4.RELEASE</version>
                <configuration>
                    <mainClass>cn.chay.cn.chay.Application</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
    </build>

    <repositories>
        <repository>
            <id>spring-milestone</id>
            <url>https://repo.spring.io/libs-release</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestone</id>
            <url>https://repo.spring.io/libs-release</url>
        </pluginRepository>
    </pluginRepositories>


</project>